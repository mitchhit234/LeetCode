#return a string representing all possibilites
#for what our original coordinates should have been

import numpy as np


def ambiguousCoordinates(s):
  s = s[1:-1].replace('.','')
  output = []
  for index in range(1,len(s)):
    beg, end = s[:index], s[index:]
    possible_beg, possible_end = [], []

    if str(int(beg)) == beg:
      possible_beg.append(beg)    
    x = "{:." + str(len(beg)-1) + "f}"
    for j in range(len(beg)):
      new = beg[:j] + "." + beg[j:]
      if x.format(float(new)).rstrip("0") == new and float(new) > 0:
        if float(new) % 1 != 0:
          possible_beg.append(new)
    
    if str(int(end)) == end:
      possible_end.append(end)   
    x = "{:." + str(len(end)-1) + "f}"
    for j in range(len(end)):
      new = end[:j] + "." + end[j:]
      if x.format(float(new)).rstrip("0") == new and float(new) > 0:
        if float(new) % 1 != 0:
          possible_end.append(new)

    for i in possible_beg:
      for j in possible_end:
        output.append("(" + i + ", " + j + ")")  
    
  return output







s = "(0123)"

print(ambiguousCoordinates(s))

l = ["(6, 961500211)","(6, 9.61500211)","(6, 96.1500211)","(6, 961.500211)","(6, 9615.00211)","(6, 96150.0211)","(6, 961500.211)","(6, 9615002.11)","(69, 61500211)","(69, 6.1500211)","(69, 61.500211)","(69, 615.00211)","(69, 6150.0211)","(69, 61500.211)","(69, 615002.11)","(69, 6150021.1)","(6.9, 61500211)","(6.9, 6.1500211)","(6.9, 61.500211)","(6.9, 615.00211)","(6.9, 6150.0211)","(6.9, 61500.211)","(6.9, 615002.11)","(6.9, 6150021.1)","(696, 1500211)","(696, 1.500211)","(696, 15.00211)","(696, 150.0211)","(696, 1500.211)","(696, 15002.11)","(696, 150021.1)","(6.96, 1500211)","(6.96, 1.500211)","(6.96, 15.00211)","(6.96, 150.0211)","(6.96, 1500.211)","(6.96, 15002.11)","(6.96, 150021.1)","(69.6, 1500211)","(69.6, 1.500211)","(69.6, 15.00211)","(69.6, 150.0211)","(69.6, 1500.211)","(69.6, 15002.11)","(69.6, 150021.1)","(6961, 500211)","(6961, 5.00211)","(6961, 50.0211)","(6961, 500.211)","(6961, 5002.11)","(6961, 50021.1)","(6.961, 500211)","(6.961, 5.00211)","(6.961, 50.0211)","(6.961, 500.211)","(6.961, 5002.11)","(6.961, 50021.1)","(69.61, 500211)","(69.61, 5.00211)","(69.61, 50.0211)","(69.61, 500.211)","(69.61, 5002.11)","(69.61, 50021.1)","(696.1, 500211)","(696.1, 5.00211)","(696.1, 50.0211)","(696.1, 500.211)","(696.1, 5002.11)","(696.1, 50021.1)","(69615, 0.0211)","(6.9615, 0.0211)","(69.615, 0.0211)","(696.15, 0.0211)","(6961.5, 0.0211)","(696150, 0.211)","(6961500, 211)","(6961500, 2.11)","(6961500, 21.1)","(69615002, 11)","(69615002, 1.1)","(6.9615002, 11)","(6.9615002, 1.1)","(69.615002, 11)","(69.615002, 1.1)","(696.15002, 11)","(696.15002, 1.1)","(6961.5002, 11)","(6961.5002, 1.1)","(69615.002, 11)","(69615.002, 1.1)","(696150.02, 11)","(696150.02, 1.1)","(6961500.2, 11)","(6961500.2, 1.1)","(696150021, 1)","(6.96150021, 1)","(69.6150021, 1)","(696.150021, 1)","(6961.50021, 1)","(69615.0021, 1)","(696150.021, 1)","(6961500.21, 1)"]
r = ["(6, 9.61500211)","(6, 96.1500211)","(6, 961.500211)","(6, 9615.00211)","(6, 96150.0211)","(6, 961500.211)","(6, 9615002.11)","(6, 96150021.1)","(6, 961500211)","(6.9, 6.1500211)","(6.9, 61.500211)","(6.9, 615.00211)","(6.9, 6150.0211)","(6.9, 61500.211)","(6.9, 615002.11)","(6.9, 6150021.1)","(6.9, 61500211)","(69, 6.1500211)","(69, 61.500211)","(69, 615.00211)","(69, 6150.0211)","(69, 61500.211)","(69, 615002.11)","(69, 6150021.1)","(69, 61500211)","(6.96, 1.500211)","(6.96, 15.00211)","(6.96, 150.0211)","(6.96, 1500.211)","(6.96, 15002.11)","(6.96, 150021.1)","(6.96, 1500211)","(69.6, 1.500211)","(69.6, 15.00211)","(69.6, 150.0211)","(69.6, 1500.211)","(69.6, 15002.11)","(69.6, 150021.1)","(69.6, 1500211)","(696, 1.500211)","(696, 15.00211)","(696, 150.0211)","(696, 1500.211)","(696, 15002.11)","(696, 150021.1)","(696, 1500211)","(6.961, 5.00211)","(6.961, 50.0211)","(6.961, 500.211)","(6.961, 5002.11)","(6.961, 50021.1)","(6.961, 500211)","(69.61, 5.00211)","(69.61, 50.0211)","(69.61, 500.211)","(69.61, 5002.11)","(69.61, 50021.1)","(69.61, 500211)","(696.1, 5.00211)","(696.1, 50.0211)","(696.1, 500.211)","(696.1, 5002.11)","(696.1, 50021.1)","(696.1, 500211)","(6961, 5.00211)","(6961, 50.0211)","(6961, 500.211)","(6961, 5002.11)","(6961, 50021.1)","(6961, 500211)","(6.9615, 0.0211)","(69.615, 0.0211)","(696.15, 0.0211)","(6961.5, 0.0211)","(69615, 0.0211)","(696150, 0.211)","(6961500, 2.11)","(6961500, 21.1)","(6961500, 211)","(6.9615002, 1.1)","(6.9615002, 11)","(69.615002, 1.1)","(69.615002, 11)","(696.15002, 1.1)","(696.15002, 11)","(6961.5002, 1.1)","(6961.5002, 11)","(69615.002, 1.1)","(69615.002, 11)","(696150.02, 1.1)","(696150.02, 11)","(6961500.2, 1.1)","(6961500.2, 11)","(69615002, 1.1)","(69615002, 11)","(6.96150021, 1)","(69.6150021, 1)","(696.150021, 1)","(6961.50021, 1)","(69615.0021, 1)","(696150.021, 1)","(6961500.21, 1)","(69615002.1, 1)","(696150021, 1)"]

print(np.setdiff1d(l,r))